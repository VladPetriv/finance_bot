name: Deploy

on:
  pull_request:
    branches: ["main"]
  push:
    branches:
      - production

permissions:
  checks: read
  contents: read
  pull-requests: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.REPO_NAME }}:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.REPO_NAME }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.REPO_NAME }}:buildcache,mode=max

      - name: Create config file
        run: |
          echo "${{ secrets.ENV }}" > config/config.sh

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Pull the latest image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.REPO_NAME }}:latest

            # Stop and remove the old container if it exists
            docker stop finance_bot || true
            docker rm finance_bot || true

            # Start the new container
            docker run -d \
              --name finance_bot \
              --restart unless-stopped \
              -p 80:80 \
              ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.REPO_NAME }}:latest

            # Clean up old images
            docker image prune -f'
